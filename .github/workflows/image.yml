name: Image

on:
  push:
    branches:
      - "master"
    tags:
      - "v*.*.*"
      - "v*.*.*-pre.*"
  pull_request:
    paths:
      - 'Dockerfile'
      - '.github/workflows/image.yml'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    name: Build
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout
      uses: actions/checkout@v3.5.0

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
      with:
        image: tonistiigi/binfmt:latest
        platforms: arm64,arm

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Set the commit hash
      run: echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

    - name: Set the build Timestamp
      run: echo "BUILD_TIMESTAMP=$(date +"%Y-%m-%dT%H:%M:%S")" >> $GITHUB_ENV

    - name: Login to Packages Container registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push development image
      if: ${{ contains(fromJson('["push", "pull_request"]'), github.event_name) }}
      uses: docker/build-push-action@v4
      with:
        context: .
        platforms: linux/arm64/v8,linux/amd64,linux/arm/v7
        push: ${{ github.event_name != 'pull_request' }}
        tags: ghcr.io/${{ github.repository_owner }}/terralist:dev
        build-args: |
          VERSION=dev
          COMMIT_HASH=${{ env.COMMIT_HASH }}
          BUILD_TIMESTAMP=${{ env.BUILD_TIMESTAMP }}

    - name: Set release version
      if: ${{ contains(fromJson('["push", "pull_request"]'), github.event_name) && startsWith(github.ref, 'refs/tags/') }}
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

    - name: Build and push pre-release image
      if: ${{ contains(fromJson('["push", "pull_request"]'), github.event_name) && startsWith(github.ref, 'refs/tags/') && contains(github.ref, '-pre.') }}
      uses: docker/build-push-action@v4
      with:
        context: .
        platforms: linux/arm64/v8,linux/amd64,linux/arm/v7
        push: ${{ github.event_name != 'pull_request' }}
        tags: |
          ghcr.io/${{ github.repository_owner }}/terralist:${{ env.RELEASE_VERSION }}
          ghcr.io/${{ github.repository_owner }}/terralist:pre-latest
        build-args: |
          VERSION=${{ env.RELEASE_VERSION }}
          COMMIT_HASH=${{ env.COMMIT_HASH }}
          BUILD_TIMESTAMP=${{ env.BUILD_TIMESTAMP }}
      
    - name: Build and push stable release image
      if: ${{ contains(fromJson('["push", "pull_request"]'), github.event_name) && startsWith(github.ref, 'refs/tags/') && (!contains(github.ref, '-pre.')) }}
      uses: docker/build-push-action@v4
      with:
        context: .
        platforms: linux/arm64/v8,linux/amd64,linux/arm/v7
        push: ${{ github.event_name != 'pull_request' }}
        tags: |
          ghcr.io/${{ github.repository_owner }}/terralist:${{ env.RELEASE_VERSION }}
          ghcr.io/${{ github.repository_owner }}/terralist:latest
        build-args: |
          VERSION=${{ env.RELEASE_VERSION }}
          COMMIT_HASH=${{ env.COMMIT_HASH }}
          BUILD_TIMESTAMP=${{ env.BUILD_TIMESTAMP }}
