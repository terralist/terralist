name: Image

on:
  push:
    branches:
      - "master"
    tags:
      - "v*.*.*"
      - "v*.*.*-pre.*"
  pull_request:
    paths:
      - 'Dockerfile'
      - '.github/workflows/image.yml'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: read
  packages: write

jobs:
  build:
    name: Build
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      with:
        image: tonistiigi/binfmt:latest
        platforms: arm64,arm

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Set the commit hash
      run: echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

    - name: Set the build Timestamp
      run: echo "BUILD_TIMESTAMP=$(date +"%Y-%m-%dT%H:%M:%S")" >> $GITHUB_ENV

    - name: Login to Packages Container registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Compute versions
      id: versions
      if: ${{ contains(fromJson('["push", "pull_request", "workflow_dispatch"]'), github.event_name) }}
      env:
        HAS_REF: ${{ startsWith(github.ref, 'refs/tags/') && 'true' || 'false' }}
        IS_PRERELEASE: ${{ contains(github.ref, '-pre.') && 'true' || 'false' }}
        REPO_SLUG: ${{ format('{0}/terralist', github.repository_owner) }}
      run: |
        version="dev"
        if [ "$HAS_REF" = "true" ]; then
          version="${GITHUB_REF#refs/*/}"
        fi

        echo "RELEASE_VERSION=${version}" >> $GITHUB_ENV

        if [ "$version" = "dev" ]; then
          echo "result=ghcr.io/$REPO_SLUG:dev" >> $GITHUB_OUTPUT
        else
          echo "result<<EOF" >> $GITHUB_OUTPUT

          echo "ghcr.io/$REPO_SLUG:$RELEASE_VERSION" >> $GITHUB_OUTPUT

          if [ "${IS_PRERELEASE}" = "true" ]; then
            echo "ghcr.io/$REPO_SLUG:pre-latest" >> $GITHUB_OUTPUT
          else
            echo "ghcr.io/$REPO_SLUG:latest" >> $GITHUB_OUTPUT
          fi

          echo "EOF" >> $GITHUB_OUTPUT
        fi

    - name: Build and push
      if: ${{ contains(fromJson('["push", "pull_request", "workflow_dispatch"]'), github.event_name) }}
      uses: docker/build-push-action@v6
      with:
        context: .
        platforms: linux/arm64,linux/amd64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.versions.outputs.result }}
        cache-to: type=gha,mode=max,ignore-error=true
        cache-from: type=gha
        build-args: |
          VERSION=${{ env.RELEASE_VERSION }}
          COMMIT_HASH=${{ env.COMMIT_HASH }}
          BUILD_TIMESTAMP=${{ env.BUILD_TIMESTAMP }}
